{"version":3,"sources":["components/Contact.js","components/Rolodex.js","index.js"],"names":["Contact","props","state","isEditing","toggleIsEditing","bind","deleteContact","updateField","cancelEdit","this","name","number","email","address","setState","alert","event","target","parentNode","remove","value","type","className","placeholder","defaultValue","onBlur","class","onClick","style","display","React","Component","Rolodex","contacts","addContact","updateInput","contact","concat","width","onChange","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca167489.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditing: false,\n      ...props,\n    };\n\n    this.toggleIsEditing = this.toggleIsEditing.bind(this);\n    this.deleteContact = this.deleteContact.bind(this);\n    this.updateField = this.updateField.bind(this);\n    this.cancelEdit = this.cancelEdit.bind(this);\n  }\n\n  toggleIsEditing() {\n    if (\n      !this.state.name ||\n      !this.state.number ||\n      !this.state.email ||\n      !this.state.address\n    ) {\n      alert('Please fill out all forms.');\n      return;\n    }\n    this.setState({\n      isEditing: !this.state.isEditing,\n    });\n  }\n\n  deleteContact(event) {\n    event.target.parentNode.parentNode.remove();\n  }\n\n  updateField(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  cancelEdit() {\n    this.setState(\n      {\n        ...this.props,\n      },\n      () => this.toggleIsEditing(),\n    );\n  }\n\n  render() {\n    return (\n      <tr>\n        <td>\n          {this.state.isEditing ? (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"name\"\n              placeholder=\"Name\"\n              defaultValue={this.state.name}\n              onBlur={this.updateField}\n            />\n          ) : (\n            <span>{this.state.name}</span>\n          )}\n        </td>\n        <td>\n          {this.state.isEditing ? (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"number\"\n              placeholder=\"Phone Number\"\n              defaultValue={this.state.number}\n              onBlur={this.updateField}\n            />\n          ) : (\n            <span>{this.state.number}</span>\n          )}\n        </td>\n        <td>\n          {this.state.isEditing ? (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"email\"\n              placeholder=\"Email\"\n              defaultValue={this.state.email}\n              onBlur={this.updateField}\n            />\n          ) : (\n            <span>{this.state.email}</span>\n          )}\n        </td>\n        <td>\n          {this.state.isEditing ? (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"address\"\n              placeholder=\"Address\"\n              defaultValue={this.state.address}\n              onBlur={this.updateField}\n            />\n          ) : (\n            <span>{this.state.address}</span>\n          )}\n        </td>\n        <td>\n          <button\n            type=\"button\"\n            class=\"btn btn-warning\"\n            name=\"edit\"\n            onClick={this.toggleIsEditing}\n            style={\n              this.state.isEditing ? { display: 'none' } : { display: 'inline' }\n            }\n          >\n            Edit\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            name=\"delete\"\n            onClick={this.deleteContact}\n            style={\n              this.state.isEditing ? { display: 'none' } : { display: 'inline' }\n            }\n          >\n            Delete\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-success\"\n            name=\"update\"\n            onClick={this.toggleIsEditing}\n            style={\n              this.state.isEditing ? { display: 'inline' } : { display: 'none' }\n            }\n          >\n            Update\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            name=\"cancel\"\n            onClick={this.cancelEdit}\n            style={\n              this.state.isEditing ? { display: 'inline' } : { display: 'none' }\n            }\n          >\n            Cancel\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n","import React from 'react';\nimport Contact from './Contact.js';\n\nexport default class Rolodex extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      contacts: [],\n      name: '',\n      number: '',\n      email: '',\n      address: '',\n    };\n\n    this.addContact = this.addContact.bind(this);\n    this.updateInput = this.updateInput.bind(this);\n  }\n\n  addContact(event) {\n    const contact = {\n      name: this.state.name,\n      number: this.state.number,\n      email: this.state.email,\n      address: this.state.address,\n    };\n\n    if (\n      !contact.name ||\n      !contact.number ||\n      !contact.email ||\n      !contact.address\n    ) {\n      alert('Please fill out all forms.');\n      return;\n    }\n\n    this.setState({\n      contacts: this.state.contacts.concat([contact]),\n      name: '',\n      number: '',\n      email: '',\n      address: '',\n    });\n  }\n\n  updateInput(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>React Rolodex</h1>\n        <table className=\"table table-responsive\">\n          <thead>\n            <tr>\n              <th style={{ width: '19%' }}>Name</th>\n              <th style={{ width: '19%' }}>Phone Number</th>\n              <th style={{ width: '19%' }}>Email</th>\n              <th style={{ width: '19%' }}>Address</th>\n              <th style={{ width: '24%' }}>Action</th>\n            </tr>\n            <tr>\n              <td>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  value={this.state.name}\n                  onChange={this.updateInput}\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"number\"\n                  placeholder=\"Phone Number\"\n                  value={this.state.number}\n                  onChange={this.updateInput}\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={this.state.email}\n                  onChange={this.updateInput}\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"address\"\n                  placeholder=\"Address\"\n                  value={this.state.address}\n                  onChange={this.updateInput}\n                />\n              </td>\n              <td>\n                <button className=\"btn btn-primary\" onClick={this.addContact}>\n                  Add Contact\n                </button>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.contacts.map(contact => {\n              return <Contact {...contact} />;\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Rolodex from './components/Rolodex.js';\n\nReactDOM.render(<Rolodex />, document.getElementById('root'));\n"],"sourceRoot":""}